################################################################################
#                                                                              #
# Master Properties File                                                       #
#                                                                              #
# Standard usage is to rename this file to default_master.properties.          #
# It should be placed in the root of the buildomatic directory, like:          #
#                                                                              #
#     <js-install>/buildomatic/default_master.properties                       #
#                                                                              #
# There is one sample property file for each database type. Sample property    #
# files are found in:                                                          #
#                                                                              #
#     <js-install>/buildomatic/sample_conf                                     #
#                                                                              #
################################################################################

################################################################################
#                                                                              #
# Installation Settings                                                        #
#                                                                              #
# Set values for:                                                              #
#                                                                              #
#   1) Application server type                                                 #
#                                                                              #
#   2) Path to application server home directory                               #
#                                                                              #
#   3) Database location and connection settings                               #
#                                                                              #
################################################################################

appServerType = tomcat7
# appServerType = tomcat5
# appServerType = tomcat6
# appServerType = jboss
# appServerType = jboss-eap-6
# appServerType = jboss-as-7
# appServerType = glassfish2
# appServerType = glassfish3
# appServerType = skipAppServerCheck

# Tomcat app server root dir
appServerDir = C:\\Program Files\\Apache Software Foundation\\Tomcat 7.0
# appServerDir = /home/devuser/apache-tomcat-7.0.26
# if linux package managed tomcat instance, set two properties below
# CATALINA_HOME = /usr/share/tomcat6
# CATALINA_BASE = /var/lib/tomcat6

# JBoss app server root dir
# appServerDir = C:\\jboss-5.1.0
# appServerDir = /home/devuser/jboss-5.1.0
# appServerDir = /usr/bin/jboss
# jboss.profile = default

# Glassfish app server root dir
# appServerDir = C:\\glassfish-3.1.2
# appServerDir = /home/devuser/glassfish-3.1.2
# appServerDir = /usr/bin/glassfish

# database type
dbType=db2

# database location and connection settings

dbHost=BUILDOMATIC_DB_HOST
dbUsername=db2admin
dbPassword=password


# additional database parameters
# (uncommnet these if you want non-default settings)

# dbPort=50000

# JasperServer db name, sample db names
# js.dbName=JSPRSRVR
# sugarcrm.dbName=SUGARCRM
# foodmart.dbName=FOODMART

# web app name
# (set one of these to deploy to a non-default war file name)
# webAppNameCE = jasperserver
# webAppNamePro = jasperserver-pro


################################################################################
#                                                                              #
# Additional Settings                                                          #
#                                                                              #
# Set values for:                                                              #
#                                                                              #
#   1) Setup JDBC Driver                                                       #
#                                                                              #
#   2) Skip JDBC Driver Deploy                                                 #
#                                                                              #
#   3) Modify Diagnostic JMX Configurations                                    #
#                                                                              #
#   4) AWS Data Source Settings                                                #
#                                                                              #
#   5) Glassfish Application Server Settings                                   #
#                                                                              #
#   6) Report Scheduler Email Properties                                       #
#                                                                              #
#   7) Encryption Settings                                                     #
#                                                                              #
#   8) External Authentication Data Sources                                    #
#                                                                              #
################################################################################

# Default) Setup Tibco/Jaspersoft/Progress JDBC Driver
#
# uncomment the following line for JDBC 4
# jdbcDataSourceClass=tibcosoftware.jdbc.db2.Db2DataSource40

# 1) Setup Standard DB2 JDBC Driver
#
# Uncomment and modify the value in order to change the default
# Driver will be found here: <path>/buildomatic/conf_source/db/db2/jdbc
#
# maven.jdbc.groupId=ibm
# maven.jdbc.artifactId=db2jcc
# maven.jdbc.version=9.5
# jdbcDriverClass=com.ibm.db2.jcc.DB2Driver
# jdbcDataSourceClass=com.ibm.db2.jcc.DB2ConnectionPoolDataSource
#
# 1b) In buildomatic/conf_source/db/db2/db.template.properties
#    edit the four properties shown below to the values shown below:
#
# admin.jdbcUrl=jdbc:db2://${dbHost}:${dbPort}/${js.dbName}:driverType=${db2.driverType};fullyMaterializeLobData=${db2.fullyMaterializeLobData};fullyMaterializeInputStreams=${db2.fullyMaterializeInputStreams};progressiveStreaming=${db2.progressiveStreaming};progresssiveLocators=${db2.progresssiveLocators};
# js.jdbcUrl=jdbc:db2://${dbHost}:${dbPort}/${js.dbName}:driverType=${db2.driverType};fullyMaterializeLobData=${db2.fullyMaterializeLobData};fullyMaterializeInputStreams=${db2.fullyMaterializeInputStreams};progressiveStreaming=${db2.progressiveStreaming};progresssiveLocators=${db2.progresssiveLocators};currentSchema=${js.dbName};
# sugarcrm.jdbcUrl=jdbc:db2://${dbHost}:${dbPort}/${sugarcrm.dbName}:driverType=${db2.driverType};currentSchema=${sugarcrm.dbName};
# foodmart.jdbcUrl=jdbc:db2://${dbHost}:${dbPort}/${foodmart.dbName}:driverType=${db2.driverType};currentSchema=${foodmart.dbName};
#

# 2) Skip JDBC Driver Deploy
#
# Uncomment and modify the value in order to change the default
# Flag used to skip JDBC driver deploying during deployment process
#
# deployJDBCDriver=false


# 3) Modify Diagnostic JMX Configurations
#
# Current default settings are shown as the property values below
# Uncomment and modify the value in order to change the default
#
# Diagnostic server: false uses Jaspersoft built in server, true to supply your own
# diagnostic.jmx.usePlatformServer = false
#
# change this value if you have more than one app server on same machine running JRS
# diagnostic.jmx.port = 10990
#
# change this if you have more than one instance of JRS on the same app server
# diagnostic.jmx.name = jasperserver
#
# change this to your RMI registry host name or IP, if you use a separate one
# diagnostic.jmx.rmiHost = localhost


# 4) AWS Data Source Settings
#
# Current default settings are shown as the property values below
# Uncomment and modify the value in order to change the default
#
# Change this value if you want to disable the AWS Data Source security group creation
# This group will allow your instace have access to target AWS data source instance
# aws.db.security.group.changes.enabled=true
#
# Db Security Group Name. Need to be overridden if server (where instance is running)
# is out of scope Amazon to have unique group name for this server.
# aws.db.security.group.name=JRSSecurityGroup
#
# Change this value to have a specific description
# aws.db.security.group.description=Jasper Report Server Security Group
#
# Provide the server IP address if your server is outside Amazon
# This is the Ingress Public IP address of server that will be added in the
# DB Security Group to have access to target AWS data source instance
# aws.db.security.group.ingressPublicIp=


# 5) Glassfish Application Server Settings
#
# Current default settings are shown as the property values below
# Uncomment and modify the value in order to change the default
#
# Glassfish domain name (default is domain1)
# glassfishDomain=domain1
#
# Glassfish domain port (default is 4848), user (default is admin) and password.
# glassfishPort=4848
# glassfishUser=admin
# AS_ADMIN_PASSWORD=adminadmin


# 6) Report Scheduler Email Properties
#
# Current default settings are shown as the property values below
# Uncomment and modify the value in order to change the default
#
# These properties control the configuration of the Report Scheduler functionality.
# The standard default application server http ports are the following: tomcat 8080, 
# jboss 8080, glassfish 4848, weblogic 7001, websphere 9080
# These values will show up in the file WEB-INF/js.quartz.properties
#
# quartz.mail.sender.host=mail.localhost.com
# quartz.mail.sender.port=25
# quartz.mail.sender.protocol=smtp
# quartz.mail.sender.username=admin
# quartz.mail.sender.password=password
# quartz.mail.sender.from=admin@localhost.com
# quartz.web.deployment.uri=http://localhost:8080/jasperserver-pro


# 7) Encryption Settings
#
# For encryption of buildomatic passwords: only encrypt=true is required. The rest of the 
# properties are going to be set to defaults below. One could also choose to modify those 
# properties but only for the first encrypt=true build pass.
#
# Note: JNDI password decryption in context.xml only works for Tomcat (and tcServer). Other 
# servers should handle their own container encryption. For eg., for jboss, after encrypt=true 
# install run, js-jdbc-ds.xml gets the encrypted password values. If the intention was to encrypt 
# buildomatic only, the admin must reset the password to plain text ones in JBoss or use internal 
# JBoss encryption. Also, see the JasperReports Server Admin Guide for a full description. 
#
# encrypt=true
# build.key.algo=AES
# build.key.size=128
# enc.transformation=AES/CBC/PKCS5Padding
# enc.block.size=16
# propsToEncrypt=dbPassword

# 8) External Authentication Data Sources
#
# Configure external LDAP context source or external database datasource here in order to be able
# to encrypt the passwords.
#
# external.jdbcDriverClass=com.mysql.jdbc.Driver
# external.jdbcUrl=jdbc:mysql://localhost:3306/EXTERNAL_DB
# external.dbUsername=externalUsername
# external.dbPassword=password
#
# external.ldapUrl=ldap://localhost:389/o=External_LDAP_Org
# external.ldapDn=cn=Manager,o=External_LDAP_Org
# external.ldapPassword=secret


# TODO: KEEP THIS PROPERTY LAST
# dummy property to temporarily fix bug 33916.
# Without this property, the last comments in master property file are removed,
# when buildomatic is encrypted (encrypt=true).
# The permanent fix will be to upgrade buildomatic/target to commons-configuration 2.0.
# http://commons.apache.org/proper/commons-configuration/download_configuration.cgi
# Original Apache bug https://issues.apache.org/jira/browse/CONFIGURATION-525
preserve_master_properties_footer_comments_when_encrypting_buildomatic=true
