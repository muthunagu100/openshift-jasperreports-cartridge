define(["require","underscore","bundle!DashboardBundle","bundle!CommonBundle","common/util/classUtil","dashboard/enum/fonts","dashboard/enum/fontSizes","dashboard/dashboardSettings","dashboard/factory/propertiesTemplateFactory","./view/PropertiesDialogView","dashboard/factory/propertiesTitleFactory","common/component/dialog/Dialog","../../../dashboardMessageBus","../../../enum/dashboardMessageBusEvents","dashboard/enum/dashboardComponentTypes"],function(o){var t=o("underscore"),e=o("bundle!DashboardBundle"),i=o("bundle!CommonBundle"),n=o("common/util/classUtil"),a=o("dashboard/enum/fonts"),s=o("dashboard/enum/fontSizes"),l=(o("dashboard/dashboardSettings"),o("dashboard/factory/propertiesTemplateFactory")),r=o("./view/PropertiesDialogView"),d=o("dashboard/factory/propertiesTitleFactory"),g=o("common/component/dialog/Dialog"),h=o("../../../dashboardMessageBus"),c=o("../../../enum/dashboardMessageBusEvents"),p=o("dashboard/enum/dashboardComponentTypes"),u=g.extend({events:t.extend({"mousedown .header.mover, .subcontainer, .footer":"_onPropertiesDialogSelect"},g.prototype.events),open:function(){this.content.model.set(this.content.original.clone().attributes),this.content.originalState.set(this.content.original.clone().attributes),g.prototype.open.apply(this,arguments),this.content.model.validate()},_onPropertiesDialogSelect:function(){this.trigger("properties:dialog:select",this)}}),b=function(o){return o.get("type")===p.FREE_TEXT?a:[]},f=function(o){return o.get("type")===p.DASHBOARD_PROPERTIES?e["dashboard.dialog.properties.auto.refresh"]:e["dashboard.dashlet.dialog.properties.auto.refresh"]},m=function(o){var t="dashboardLevelPropertiesDialog "+o.get("type")+"Dialog";return o.get("type")!==p.DASHBOARD_PROPERTIES&&(t+=" dashletLevelPropertiesDialog"),t};return n.extend({constructor:function(o){this.dialog=new u({model:o,additionalCssClasses:m(o),title:d(o),content:new r({template:l(o),i18n:e,model:o,autoRefreshTitle:f(o),fonts:b(o),fontSizes:s}),buttons:[{label:i["button.apply"],action:"apply",primary:!0},{label:i["button.ok"],action:"ok",primary:!1},{label:i["button.cancel"],action:"cancel",primary:!1}]}),this.initialize()},initialize:function(){this._initEvents(),this.dialogIsOpened=!1},onDialogApply:function(){this.applyModel()},onDialogOk:function(){this.rollbackModel({silent:!0}),this.applyModel(),this.saveModel(),g.prototype.close.apply(this.dialog,arguments)},onDialogCancel:function(){this.rollbackModel(),g.prototype.close.apply(this.dialog,arguments)},saveModel:function(){var o=this.dialog.content.originalState;this.dialog.content.original.hasChanged()&&(o.set(this.dialog.content.original.toJSON()),h.trigger(c.SAVE_DASHBOARD_STATE))},applyModel:function(){this.dialog.content.model.isValid(!0)&&this.dialog.content.original&&this.dialog.content.original.set(this.dialog.content.model.attributes)},rollbackModel:function(o){var o=o||{},t=this.dialog.content.original,e=this.dialog.content.originalState,i=e.toJSON();o.silent?t.set(i,{silent:!0}):t.set(i)},toggleDialogStateProps:function(o){this[o]=this[o]?!1:!0},_initEvents:function(){var o=this;this.dialog.on("open",function(){o.toggleDialogStateProps("dialogIsOpened")}),this.dialog.on("close",function(){o.toggleDialogStateProps("dialogIsOpened")}),this.dialog.on("button:cancel",t.bind(this.onDialogCancel,this)),this.dialog.on("button:apply",t.bind(this.onDialogApply,this)),this.dialog.on("button:ok",t.bind(this.onDialogOk,this))},remove:function(){this.dialog.content.remove(),this.dialog.off("button:cancel"),this.dialog.off("button:apply"),this.dialog.off("button:ok"),this.dialog.off("open"),this.dialog.off("close"),this.dialog.remove()}})});