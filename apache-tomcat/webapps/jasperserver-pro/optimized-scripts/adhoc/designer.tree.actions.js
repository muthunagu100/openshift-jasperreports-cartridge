define(["require","adhoc/designer"],function(e){var r=e("adhoc/designer");return r.moveToMeasuresOrAttributes=function(e){if(e){var t=Object.isArray(e)?e:[e];e=t.first();var d=e.getTreeId(),a=r[d].getRootNode(),i=0==d.indexOf("dimension")?r.measuresTree:r.dimensionsTree;_.each(t,function(e){r.mergeToDestTree(r.copyParentStructure(e,i),i.getRootNode());for(var t=e;t!=a&&0==t.childs.length;){var d=t.parent;d.removeChild(t),t=d}}),i.resortTree(),i.renderTree(),i.openAndSelectNode(e.param.uri)}},r.addNodeToTree=function(e,r){var t=r.processNode(e);t.isloaded=!0,t.editable=!1,r.rootNode.addChild(t),t.refreshStyle()},r.removeNodeFromTree=function(e){if(!e.parent)throw"The parent node is undefined";var r=e.parent,t=e.param.extra.isMeasure;r.removeChild(e),0==r.childs.length&&!t&&r.parent&&r.parent.removeChild(r)},r.copyParentStructure=function(e,t){if(e&&t){for(var d=dynamicTree.trees[e.getTreeId()],a=t===r.measuresTree,i=localContext.metaNodeBuilder?localContext.metaNodeBuilder:r.metaNodeBuilder,n=t.processNode(i(e,a)),o=e.parent,s=null;o&&o!=d.getRootNode();)s=t.processNode(i(o,a)),s.addChild(n),n=s,o=o.parent;return n}},r.mergeToDestTree=function(e,t){if(t){var d=dynamicTree.trees[t.getTreeId()],a=d.findNodeChildByMetaName(t,e.param.id);null!=a?e.hasChilds()&&e.childs.each(function(e){r.mergeToDestTree(e,a)}):(r.markNodeAsLoaded(e),t.addChild(e))}},r.metaNodeBuilder=function(e,t){var d={id:e.param.id,label:e.name,type:e.param.type,uri:e.param.uri,order:e.orderNumber};if(e.param.extra){var a=Object.extend({},e.param.extra);d.extra=Object.extend(a,{id:e.param.id,isMeasure:t,dimensionId:t?r.MEASURES:e.param.id})}return d},r.markNodeAsLoaded=function(e){e.isloaded=!0,e.isParent()&&e.childs.each(function(e){r.markNodeAsLoaded(e)})},r.getAllLeaves=function(e,r){var t=arguments[2]||[];if(!e){if(!r)return t;if(e=r.getRootNode(),!e)return t}if(!e.hasChilds())return t.push(e),t;for(var d=0;d<e.childs.length;d++)this.getAllLeaves(e.childs[d],null,t);return t},r.getFirstLeaf=function(e){if(!e)return null;var r=e;if(!e.childs||0===e.childs.length)return r;for(var t=0;t<e.childs.length;t++)if(r=this.getFirstLeaf(e.childs[t]))return r},r.getNodeByEvent=function(e){return this.measuresTree.getTreeNodeByEvent(e)||this.dimensionsTree.getTreeNodeByEvent(e)},r});