define(["require","adhoc/filter/BaseFiltersController","underscore","adhoc/filter/factory/filterModelExpressionTypeFactory","adhoc/filter/enum/filterExpressionTypes"],function(e){var i=e("adhoc/filter/BaseFiltersController"),t=e("underscore"),r=(e("adhoc/filter/factory/filterModelExpressionTypeFactory"),e("adhoc/filter/enum/filterExpressionTypes"),i.extend({isOlap:!0,initialize:function(){i.prototype.initialize.apply(this,arguments),this.listenTo(this.collection,"change:value",this.updateFilter)},addFilter:function(e){var i=e[0];return this.service.addOlapFilter(i.dimensionId,i.name).done(t.bind(function(e){this.collection.set(e.existingFilters),this.onStateUpdate(e)},this))},updateFilter:function(e){return e.isValid(!0)?this.service.update(e.get("id"),e.toExpression()).done(t.bind(function(i){var r=this;t.each(i.existingFilters,function(i){if(i.id!==e.get("id")){var t=r.collection.get(i.id);i.expressionType=t.get("expressionType"),t.set(i),t.removeAvailableData();var n=r._getFilterEditorByModel(t);n&&n.render()}}),this.onStateUpdate(i)},this)):void 0}}));return window.OlapFiltersController=r,r});