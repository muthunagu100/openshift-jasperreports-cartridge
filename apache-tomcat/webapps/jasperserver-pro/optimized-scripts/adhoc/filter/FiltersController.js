define(["require","exports","module","adhoc/filter/BaseFiltersController","adhoc/filter/editor/ComplexExpressionEditor","logger","adhoc/filter/ComplexExpressionModel"],function(e,i,s){var o=e("adhoc/filter/BaseFiltersController"),t=e("adhoc/filter/editor/ComplexExpressionEditor"),r=e("logger").register(s),l=e("adhoc/filter/ComplexExpressionModel"),n=o.extend({isOlap:!1,initialize:function(){o.prototype.initialize.apply(this,arguments),this.expressionModel=new l({id:"complexFilter",complexExpression:"",filterPodMinimized:!0}),this.complexExpressionEditor=new t({el:this.$("#expression-container"),model:this.expressionModel}),this.on("invalid:complexExpression",this.showComplexExpressionServerError),this.listenTo(this.collection,"change:value",this.updateFilter),this.listenTo(this.collection,"change:isAnyValue",this.updateFilter),this.listenTo(this.expressionModel,"toggle",this.toggleFilter),this.listenTo(this.expressionModel,"change:complexExpression",_.partial(this.setFiltersChanged,!0)),this.listenTo(this.expressionModel,"change:complexExpression",this.clearComplexExpressionServerError),this.listenTo(this.expressionModel,"change:filterPodMinimized",this.changeFilterPanelHeight)},changeFilterPanelHeight:function(){var e=this.$("> .content > .body"),i=this.$("> .content > .footer");e[this.expressionModel.get("filterPodMinimized")?"addClass":"removeClass"]("complexExpressionMinimized"),i[this.expressionModel.get("filterPodMinimized")?"addClass":"removeClass"]("complexExpressionMinimized"),e[this.expressionModel.get("filterPodMinimized")?"removeClass":"addClass"]("complexExpressionMaximized"),i[this.expressionModel.get("filterPodMinimized")?"removeClass":"addClass"]("complexExpressionMaximized")},render:function(){return o.prototype.render.apply(this,arguments),this.complexExpressionEditor.render(),this.changeFilterPanelHeight(),this},clearComplexExpressionServerError:function(){this.complexExpressionEditor.$("label.control.input").hasClass("error")&&(this.$("#filterMessage span").empty(),this.complexExpressionEditor.$("label.control.input").removeClass("error"))},showComplexExpressionServerError:function(e,i){this.$("#filterMessage span").html(i),this.complexExpressionEditor.$("label.control.input").addClass("error")},setFilters:function(e){this.expressionModel.set("complexExpression",e.complexExpression),this.expressionModel.set("filterPodMinimized",e.isComplexFilterPodMinimized),o.prototype.setFilters.apply(this,arguments)},_deleteFilterDoneCallback:function(e,i){this.expressionModel.set("complexExpression",i.complexExpression),o.prototype._deleteFilterDoneCallback.apply(this,arguments)},_deleteAllFiltersDoneCallback:function(e,i){this.expressionModel.set("complexExpression",i.complexExpression),o.prototype._deleteAllFiltersDoneCallback.apply(this,arguments)},applyFilters:function(){return this.$("#filterMessage span").empty(),this.setFiltersChanged(!1),this.service.applyFiltersAndExpression(this.collection.toExpression(),this.expressionModel.get("complexExpression")).done(_.bind(function(e,i,s){var o=s.getResponseHeader("adhocException");return o?void r.error(o):(this.setFilters(e),void this.onApply(e))},this)).fail(_.bind(function(e){var i=JSON.parse(e.responseText);i.editFilterError&&this.trigger("invalid:filters",this.collection,i.editFilterError),i.complexFilterError&&this.trigger("invalid:complexExpression",this.collection,i.complexFilterError)},this))}});return window.FiltersController=n,n});